{"ast":null,"code":"var _jsxFileName = \"/Users/gourvankitsinghbhati/Downloads/01-starting-project 4/src/Store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport CartContext from './Cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const isExistingItemsIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[isExistingItemsIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[isExistingItemsIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type = 'REMOVE') {\n    let toRemove = action.id;\n    let existingItemIndex = toRemove.findIndex(item => item.id === toRemove);\n    const existingItem = state.items[existingItemIndex];\n    let totalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: totalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/gourvankitsinghbhati/Downloads/01-starting-project 4/src/Store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","isExistingItemsIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","toRemove","existingItemIndex","existingItem","filter","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,UAAMC,kBAAkB,GAAGH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,GAAoBJ,MAAM,CAACG,IAAP,CAAYE,MAA/E;AACA,UAAMC,oBAAoB,GAACP,KAAK,CAACH,KAAN,CAAYW,SAAZ,CAAsBJ,IAAI,IAAEA,IAAI,CAACK,EAAL,KAAUR,MAAM,CAACG,IAAP,CAAYK,EAAlD,CAA3B;AACA,UAAMC,gBAAgB,GAACV,KAAK,CAACH,KAAN,CAAYU,oBAAZ,CAAvB;AACA,QAAII,YAAJ;;AACA,QAAGD,gBAAH,EAAoB;AAClB,YAAME,WAAW,GAAC,EAChB,GAAGF,gBADa;AAEhBJ,QAAAA,MAAM,EAACI,gBAAgB,CAACJ,MAAjB,GAAwBL,MAAM,CAACG,IAAP,CAAYE;AAF3B,OAAlB;AAIAK,MAAAA,YAAY,GAAC,CAAC,GAAGX,KAAK,CAACH,KAAV,CAAb;AACAc,MAAAA,YAAY,CAACJ,oBAAD,CAAZ,GAAmCK,WAAnC;AAED,KARD,MAQK;AACHD,MAAAA,YAAY,GAACX,KAAK,CAACH,KAAN,CAAYgB,MAAZ,CAAmBZ,MAAM,CAACG,IAA1B,CAAb;AACD;;AAED,WAAO;AACLP,MAAAA,KAAK,EAAEc,YADF;AAELb,MAAAA,WAAW,EAAEK;AAFR,KAAP;AAID;;AAAA,MAAGF,MAAM,CAACC,IAAP,GAAY,QAAf,EAAwB;AAEvB,QAAIY,QAAQ,GAACb,MAAM,CAACQ,EAApB;AACA,QAAIM,iBAAiB,GAACD,QAAQ,CAACN,SAAT,CAAmBJ,IAAI,IAAEA,IAAI,CAACK,EAAL,KAAUK,QAAnC,CAAtB;AACA,UAAME,YAAY,GAAChB,KAAK,CAACH,KAAN,CAAYkB,iBAAZ,CAAnB;AACA,QAAIjB,WAAW,GAACE,KAAK,CAACF,WAAN,GAAkBkB,YAAY,CAACX,KAA/C;AACA,QAAIM,YAAJ;;AAEA,QAAGK,YAAY,CAACV,MAAb,KAAsB,CAAzB,EAA2B;AACzBK,MAAAA,YAAY,GAAGX,KAAK,CAACH,KAAN,CAAYoB,MAAZ,CAAmBb,IAAI,IAAEA,IAAI,CAACK,EAAL,KAAUR,MAAM,CAACQ,EAA1C,CAAf;AACD,KAFD,MAEK;AACJ,YAAMG,WAAW,GAAC,EAAC,GAAGI,YAAJ;AAAiBV,QAAAA,MAAM,EAACU,YAAY,CAACV,MAAb,GAAoB;AAA5C,OAAlB;AACAK,MAAAA,YAAY,GAAC,CAAC,GAAGX,KAAK,CAACH,KAAV,CAAb;AACAc,MAAAA,YAAY,CAACI,iBAAD,CAAZ,GAAgCH,WAAhC;AAIA;;AACD,WAAO;AACLf,MAAAA,KAAK,EAACc,YADD;AAELb,MAAAA,WAAW,EAACA;AAFP,KAAP;AAKD;;AACD,SAAOF,gBAAP;AACD,CA/CD;;AAiDA,MAAMsB,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkC3B,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAAlD;;AAEA,QAAM0B,oBAAoB,GAAIlB,IAAD,IAAU;AACrCiB,IAAAA,kBAAkB,CAAC;AAACnB,MAAAA,IAAI,EAAE,KAAP;AAAcE,MAAAA,IAAI,EAAEA;AAApB,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMmB,yBAAyB,GAAId,EAAD,IAAQ;AACxCY,IAAAA,kBAAkB,CAAC;AAACnB,MAAAA,IAAI,EAAE,QAAP;AAAiBO,MAAAA,EAAE,EAAEA;AAArB,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMe,WAAW,GAAG;AAClB3B,IAAAA,KAAK,EAAEuB,SAAS,CAACvB,KADC;AAElBC,IAAAA,WAAW,EAAEsB,SAAS,CAACtB,WAFL;AAGlB2B,IAAAA,OAAO,EAAEH,oBAHS;AAIlBI,IAAAA,UAAU,EAAEH;AAJM,GAApB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACGL,KAAK,CAACQ;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAvBD;;GAAMT,Y;;KAAAA,Y;AAyBN,eAAeA,YAAf","sourcesContent":["import { useReducer } from 'react';\n\nimport CartContext from './Cart-context';\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const isExistingItemsIndex=state.items.findIndex(item=>item.id===action.item.id)\n    const existingCartItem=state.items[isExistingItemsIndex]\n    let updatedItems\n    if(existingCartItem){\n      const updatedItem={\n        ...existingCartItem,\n        amount:existingCartItem.amount+action.item.amount\n      }\n      updatedItems=[...state.items]\n      updatedItems[isExistingItemsIndex]=updatedItem\n\n    }else{\n      updatedItems=state.items.concat(action.item)\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }if(action.type='REMOVE'){\n    \n    let toRemove=action.id\n    let existingItemIndex=toRemove.findIndex(item=>item.id===toRemove)\n    const existingItem=state.items[existingItemIndex]\n    let totalAmount=state.totalAmount-existingItem.price\n    let updatedItems\n\n    if(existingItem.amount===1){\n      updatedItems = state.items.filter(item=>item.id!==action.id)\n    }else{\n     const updatedItem={...existingItem,amount:existingItem.amount-1}\n     updatedItems=[...state.items]\n     updatedItems[existingItemIndex]=updatedItem\n\n\n\n    }\n    return {\n      items:updatedItems,\n      totalAmount:totalAmount\n    }\n\n  }\n  return defaultCartState;\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = (item) => {\n    dispatchCartAction({type: 'ADD', item: item});\n  };\n\n  const removeItemFromCartHandler = (id) => {\n    dispatchCartAction({type: 'REMOVE', id: id});\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}