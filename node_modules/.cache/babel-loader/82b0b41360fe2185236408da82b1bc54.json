{"ast":null,"code":"var _jsxFileName = \"/Users/gourvankitsinghbhati/Downloads/01-starting-project 4/src/Store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"./Cart-context\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type == \"ADD\") {\n    const updatedItem = state.items.concat(action.item);\n    const updatedPrice = state.totalAmount + action.item.price * action.item.totalAmount;\n    return {\n      items: updatedItem,\n      totalAmount: updatedPrice\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [state, dispatchState] = useReducer(cartReducer, defaultCartState);\n\n  const addItemHandler = item => {\n    dispatchState({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemHandler = id => {\n    dispatchState({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const value = {\n    items: state.items,\n    totalAmount: state.totalAmount,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"SXT4Ir9wfcmCKmZNbuxlVoDo6JM=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/gourvankitsinghbhati/Downloads/01-starting-project 4/src/Store/CartProvider.js"],"names":["CartContext","useReducer","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedItem","concat","item","updatedPrice","price","CartProvider","props","dispatchState","addItemHandler","removeItemHandler","id","value","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;;AACA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,IAAe,KAAnB,EAA0B;AACxB,UAAMC,WAAW,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAApB;AACA,UAAMC,YAAY,GAChBN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACI,IAAP,CAAYP,WADtD;AAEA,WAAO;AACHD,MAAAA,KAAK,EAACM,WADH;AAEHL,MAAAA,WAAW,EAACQ;AAFT,KAAP;AAID;;AACD,SAAOV,gBAAP;AACD,CAXD;;AAYA,MAAMY,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACT,KAAD,EAAQU,aAAR,IAAyBf,UAAU,CAACI,WAAD,EAAcH,gBAAd,CAAzC;;AACA,QAAMe,cAAc,GAAIN,IAAD,IAAU;AAC/BK,IAAAA,aAAa,CAAC;AAAER,MAAAA,IAAI,EAAE,KAAR;AAAeG,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAb;AACD,GAFD;;AAGA,QAAMO,iBAAiB,GAAIC,EAAD,IAAQ;AAChCH,IAAAA,aAAa,CAAC;AAAER,MAAAA,IAAI,EAAE,QAAR;AAAkBW,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAb;AACD,GAFD;;AAGA,QAAMC,KAAK,GAAG;AACZjB,IAAAA,KAAK,EAAEG,KAAK,CAACH,KADD;AAEZC,IAAAA,WAAW,EAAEE,KAAK,CAACF,WAFP;AAGZiB,IAAAA,OAAO,EAAEJ,cAHG;AAIZK,IAAAA,UAAU,EAAEJ;AAJA,GAAd;AAMA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,KAA7B;AAAA,cAAqCL,KAAK,CAACQ;AAA3C;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAjBD;;GAAMT,Y;;KAAAA,Y;AAkBN,eAAeA,YAAf","sourcesContent":["import CartContext from \"./Cart-context\";\nimport { useReducer } from \"react\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\nconst cartReducer = (state, action) => {\n  if (action.type == \"ADD\") {\n    const updatedItem = state.items.concat(action.item);\n    const updatedPrice =\n      state.totalAmount + action.item.price * action.item.totalAmount;\n    return {\n        items:updatedItem,\n        totalAmount:updatedPrice\n    }\n  }\n  return defaultCartState;\n};\nconst CartProvider = (props) => {\n  const [state, dispatchState] = useReducer(cartReducer, defaultCartState);\n  const addItemHandler = (item) => {\n    dispatchState({ type: \"ADD\", item: item });\n  };\n  const removeItemHandler = (id) => {\n    dispatchState({ type: \"REMOVE\", id: id });\n  };\n  const value = {\n    items: state.items,\n    totalAmount: state.totalAmount,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler,\n  };\n  return (\n    <CartContext.Provider value={value}>{props.children}</CartContext.Provider>\n  );\n};\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}